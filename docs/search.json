[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "[NIHAN KOKSOY] Progress Journal",
    "section": "",
    "text": "This progress journal covers [STUDENT NAME SURNAME / PROJECT GROUP NAME]’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "See Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Assignment 1",
    "section": "",
    "text": "Hello My name is Nihan. I hold my Bachelor’s of Science in Electrical and Electronic Engineering from Istanbul University in 2004. I have been working in the telecommunication sector for 18 years, both in the technical and sales and project departments. Now, I am working at “TI Sparkle” as a “Sales Manager”. Big data analysis is not used much in the telecommunication sector and the sector has a serious deficit in this regard. By having sufficient knowledge about Big Data Analytics, firstly, I want to provide added value for myself and then use this knowledge in telecommunication sector to benefit both my company and my sector. In R, you can use operators to perform common mathematical operations on numbers.\nhttps://www.linkedin.com/in/nihan-cinisli-k%C3%B6ksoy-204bb5a2/"
  },
  {
    "objectID": "assignment1.html#math-operator",
    "href": "assignment1.html#math-operator",
    "title": "1  Assignment 1",
    "section": "1.1 Math Operator",
    "text": "1.1 Math Operator\nThe + operator is used to add together two values: And the - operator is used for subtraction: The sqrt() function returns the square root of a number:\n\n10 + 5\n\n[1] 15\n\n10 - 5\n\n[1] 5\n\nsqrt(16)\n\n[1] 4"
  },
  {
    "objectID": "inclass1.html",
    "href": "inclass1.html",
    "title": "2  In Class Assignment1",
    "section": "",
    "text": "install.packages(“tidyverse”) install.packages(“nycflights13”)\nLet’s call the packages :\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(nycflights13)\n\nWe can see there are 3,222 rows and 9 columns. We can see the columns names and data type\n\nplanes %>% glimpse()\n\nRows: 3,322\nColumns: 9\n$ tailnum      <chr> \"N10156\", \"N102UW\", \"N103US\", \"N104UW\", \"N10575\", \"N105UW…\n$ year         <int> 2004, 1998, 1999, 1999, 2002, 1999, 1999, 1999, 1999, 199…\n$ type         <chr> \"Fixed wing multi engine\", \"Fixed wing multi engine\", \"Fi…\n$ manufacturer <chr> \"EMBRAER\", \"AIRBUS INDUSTRIE\", \"AIRBUS INDUSTRIE\", \"AIRBU…\n$ model        <chr> \"EMB-145XR\", \"A320-214\", \"A320-214\", \"A320-214\", \"EMB-145…\n$ engines      <int> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ seats        <int> 55, 182, 182, 182, 55, 182, 182, 182, 182, 182, 55, 55, 5…\n$ speed        <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ engine       <chr> \"Turbo-fan\", \"Turbo-fan\", \"Turbo-fan\", \"Turbo-fan\", \"Turb…\n\n\nLet’s see the number of planes belonging to the manufacturers.\n\nplanes %>% \n  group_by(manufacturer) %>% \n  summarise(count=n()) %>% \n  arrange(manufacturer) %>% \n  print(n=Inf)\n\n# A tibble: 35 × 2\n   manufacturer                  count\n   <chr>                         <int>\n 1 AGUSTA SPA                        1\n 2 AIRBUS                          336\n 3 AIRBUS INDUSTRIE                400\n 4 AMERICAN AIRCRAFT INC             2\n 5 AVIAT AIRCRAFT INC                1\n 6 AVIONS MARCEL DASSAULT            1\n 7 BARKER JACK L                     1\n 8 BEECH                             2\n 9 BELL                              2\n10 BOEING                         1630\n11 BOMBARDIER INC                  368\n12 CANADAIR                          9\n13 CANADAIR LTD                      1\n14 CESSNA                            9\n15 CIRRUS DESIGN CORP                1\n16 DEHAVILLAND                       1\n17 DOUGLAS                           1\n18 EMBRAER                         299\n19 FRIEDEMANN JON                    1\n20 GULFSTREAM AEROSPACE              2\n21 HURLEY JAMES LARRY                1\n22 JOHN G HESS                       1\n23 KILDALL GARY                      1\n24 LAMBERT RICHARD                   1\n25 LEARJET INC                       1\n26 LEBLANC GLENN T                   1\n27 MARZ BARRY                        1\n28 MCDONNELL DOUGLAS               120\n29 MCDONNELL DOUGLAS AIRCRAFT CO   103\n30 MCDONNELL DOUGLAS CORPORATION    14\n31 PAIR MIKE E                       1\n32 PIPER                             5\n33 ROBINSON HELICOPTER CO            1\n34 SIKORSKY                          1\n35 STEWART MACO                      2\n\n\nLet’s get the number of plane numbers for each year\n\nplanes %>% \n  group_by(year) %>% \n  summarise(count=n()) %>% \n  arrange(year) %>% \n  print(n=Inf)\n\n# A tibble: 47 × 2\n    year count\n   <int> <int>\n 1  1956     1\n 2  1959     2\n 3  1963     2\n 4  1965     1\n 5  1967     1\n 6  1968     1\n 7  1972     1\n 8  1973     1\n 9  1974     1\n10  1975     3\n11  1976     3\n12  1977     2\n13  1978     2\n14  1979     4\n15  1980     4\n16  1983     1\n17  1984     5\n18  1985    23\n19  1986    17\n20  1987    40\n21  1988    75\n22  1989    60\n23  1990    90\n24  1991   108\n25  1992   109\n26  1993    59\n27  1994    48\n28  1995    54\n29  1996    55\n30  1997    74\n31  1998   174\n32  1999   206\n33  2000   244\n34  2001   284\n35  2002   212\n36  2003   150\n37  2004   192\n38  2005   162\n39  2006   126\n40  2007   123\n41  2008   147\n42  2009    84\n43  2010    48\n44  2011    66\n45  2012    95\n46  2013    92\n47    NA    70"
  }
]